const { StringSelectMenuBuilder, ActionRowBuilder } = require('discord.js');
const Utils = require('../../utils/utils');

async function handleRegion(interaction, instance, channel, manager, client) {
    const regions = [
        { label: 'Automatic', value: 'null' },
        { label: 'ğŸ‡ºğŸ‡¸ US East', value: 'us-east' },
        { label: 'ğŸ‡ºğŸ‡¸ US West', value: 'us-west' },
        { label: 'ğŸ‡ºğŸ‡¸ US Central', value: 'us-central' },
        { label: 'ğŸ‡ºğŸ‡¸ US South', value: 'us-south' },
        { label: 'ğŸ‡ªğŸ‡º Europe', value: 'europe' },
        { label: 'ğŸ‡³ğŸ‡± Amsterdam', value: 'amsterdam' },
        { label: 'ğŸ‡¬ğŸ‡§ London', value: 'london' },
        { label: 'ğŸ‡©ğŸ‡ª Frankfurt', value: 'frankfurt' },
        { label: 'ğŸ‡·ğŸ‡º Russia', value: 'russia' },
        { label: 'ğŸ‡°ğŸ‡· South Korea', value: 'south-korea' },
        { label: 'ğŸ‡¯ğŸ‡µ Japan', value: 'japan' },
        { label: 'ğŸ‡¸ğŸ‡¬ Singapore', value: 'singapore' },
        { label: 'ğŸ‡¦ğŸ‡º Sydney', value: 'sydney' },
        { label: 'ğŸ‡§ğŸ‡· Brazil', value: 'brazil' },
        { label: 'ğŸ‡®ğŸ‡³ India', value: 'india' },
        { label: 'ğŸ‡­ğŸ‡° Hong Kong', value: 'hongkong' },
        { label: 'ğŸ‡¿ğŸ‡¦ South Africa', value: 'south-africa' }
    ];
    const selectMenu = new StringSelectMenuBuilder()
        .setCustomId(`tempvc_region_select_${instance.channelId}`)
        .setPlaceholder('Select voice region...')
        .addOptions(regions);
    const row = new ActionRowBuilder().addComponents(selectMenu);
    await interaction.reply({
        content: `Current region: **${instance.settings.region || 'Automatic'}**`,
        components: [row],
        ephemeral: true
    });
}

async function handleRegionSelection(interaction, instance, channel, value, manager, client) {
    const region = value === 'null' ? null : value;
    await channel.setRTCRegion(region);
    instance.settings.region = region;
    await instance.save();
    await instance.autoSaveSettings();
    const regionText = region || 'Automatic';
    await interaction.update({
        content: `âœ… Voice region set to: **${regionText}**`,
        components: []
    });
    await manager.updateControlPanel(instance, channel);
}

module.exports = {
    handleRegion,
    handleRegionSelection
};
